<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="using:VolleMoehre.App.Shared.Converter"
    xmlns:vm="using:VolleMoehre.App.Shared.ViewModels"
    xmlns:contracts="using:VolleMoehre.Contracts.Model"
    xmlns:local="using:VolleMoehre.App.Shared"
    x:Class="VolleMoehre.App.Shared.Resources">

    <converter:DateFormatConverter x:Key="DateFormatConverter"/>
    <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converter:BooleanToInvertedVisibilityConverter x:Key="BooleanToInvertedVisibilityConverter"/>
    <converter:DateTimeToDateTimeOffsetConverter x:Key="DateTimeToDateTimeOffsetConverter"/>
    <converter:DateTimeToTimeSpanConverter x:Key="DateTimeToTimeSpanConverter"/>

    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Red"/>

    <Style x:Key="MoehreButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="White">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderThickness="1" BorderBrush="Orange"
                            Background="Orange" CornerRadius="10">
                                <TextBlock x:Name="ContentPresenter" HorizontalAlignment="Center" Foreground="White" Text="{TemplateBinding Content}" Margin="5" Padding="0" FontSize="13"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <DataTemplate x:Key="AuftrittsterminTemplate_Public" x:DataType="contracts:AuftrittsterminPublic">
        <StackPanel Margin="0,0,0,10">
            <TextBlock Text="{Binding Showtyp}" FontWeight="Bold"/>
            <TextBlock Text="{Binding Spielort}" Margin="10,0,0,0"/>
            <TextBlock Text="{Binding Datum, Converter={StaticResource DateFormatConverter}}" Margin="10,0,0,0"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SpielerabrechnungTemplate" x:DataType="contracts:Spielerabrechnung">
        <StackPanel Margin="0,0,0,10">
            <TextBlock Text="{Binding Spielername}" FontWeight="Bold"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text=" => "/>
                <TextBlock Text="{Binding Endergebnis}"/>
                <TextBlock Text=",- Euro"/>
            </StackPanel>
            <ListView ItemsSource="{Binding Abrechnungszeilen}"
                      SelectionMode="None" IsItemClickEnabled="False">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="WrapWholeWords" FontSize="13"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>
    </DataTemplate>

    

    <DataTemplate x:Key="TrainingsterminTemplate" x:DataType="vm:TrainingsterminViewModel">
        <Grid>
            <Grid Tag="{Binding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="10,10,0,0">
                    <TextBlock Text="{Binding Trainingstyp}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Ort}" Margin="10,0,0,0"/>
                    <TextBlock Text="{Binding Datum}" Margin="10,0,0,0"
                           TextWrapping="WrapWholeWords"/>
                    <TextBlock Text="{Binding FreitextInfo}" Margin="10,0,0,0" MaxWidth="150"
                           TextWrapping="Wrap" FontStyle="Italic"/>
                </StackPanel>
                <StackPanel x:Name="Leiterinfo" Orientation="Vertical" Grid.Row="0" Margin="15,10,0,0" Grid.Column="1">
                    <TextBlock TextWrapping="WrapWholeWords" Visibility="{Binding LeiterFehlt, Converter={StaticResource BooleanToInvertedVisibilityConverter}}" MaxWidth="250">
                        <TextBlock.Inlines>
                            <Run Text="Moderation: " FontWeight="Bold"/>
                            <Run Text="{Binding Leiter}" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="Kein Leiter!" Foreground="Red" FontWeight="Bold" Visibility="{Binding LeiterFehlt, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock TextWrapping="WrapWholeWords" Visibility="{Binding TeilnehmerLeer, Converter={StaticResource BooleanToInvertedVisibilityConverter}}" MaxWidth="250">
                        <TextBlock.Inlines>
                            <Run Text="Spieler: " FontWeight="Bold"/>
                            <Run Text="{Binding Teilnehmer}" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock TextWrapping="WrapWholeWords" Visibility="{Binding VorgemerkteLeer, Converter={StaticResource BooleanToInvertedVisibilityConverter}}" MaxWidth="250">
                        <TextBlock.Inlines>
                            <Run Text="Vorgemerkte: " FontWeight="Bold"/>
                            <Run Text="{Binding Vorgemerkte}" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock TextWrapping="WrapWholeWords" Visibility="{Binding AbwesendeLeer, Converter={StaticResource BooleanToInvertedVisibilityConverter}}" MaxWidth="250">
                        <TextBlock.Inlines>
                            <Run Text="Abwesende: " FontWeight="Bold"/>
                            <Run Text="{Binding Abwesende}" />
                        </TextBlock.Inlines>
                    </TextBlock>
                </StackPanel>
                <ListView ItemsSource="{Binding Kommentare}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="15,5" SelectionMode="None">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment"  Value="Stretch"></Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:KommentarViewModel">
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Spieler}" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding Kommentar}" FontStyle="Italic" TextWrapping="WrapWholeWords" Margin="3,0" MaxWidth="300"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,0">
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanTeilnehmer, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
                        <Border BorderThickness="1" BorderBrush="Green"
                            Background="Green" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="White" Text="Teilnehmer" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanTeilnehmer, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.SetTeilnehmerCommand, ElementName=Trainings_Page}" CommandParameter="{Binding}">
                        <Border BorderThickness="1" BorderBrush="Green"
                            Background="White" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="Black" Text="Teilnehmer" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanLeiter, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
                        <Border BorderThickness="1" BorderBrush="Purple"
                            Background="Purple" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="White" Text="Leiter" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanLeiter, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.SetLeiterCommand, ElementName=Trainings_Page}" CommandParameter="{Binding}">
                        <Border BorderThickness="1" BorderBrush="Purple"
                            Background="White" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="Black" Text="Leiter" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanVormerken, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
                        <Border BorderThickness="1" BorderBrush="Orange"
                            Background="Orange" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="White" Text="Vorgemerkt" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanVormerken, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.SetVorgemerktCommand, ElementName=Trainings_Page}" CommandParameter="{Binding}">
                        <Border BorderThickness="1" BorderBrush="Orange"
                            Background="White" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="Black" Text="Vorgemerkt" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanAbwesend, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
                        <Border BorderThickness="1" BorderBrush="Red"
                            Background="Red" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="White" Text="Abwesend" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                    <Button Padding="0" Background="Transparent" Visibility="{Binding CanAbwesend, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.SetAbwesendCommand, ElementName=Trainings_Page}" CommandParameter="{Binding}">
                        <Border BorderThickness="1" BorderBrush="Red"
                            Background="White" CornerRadius="10">
                            <TextBlock HorizontalAlignment="Center" Foreground="Black" Text="Abwesend" Margin="5" Padding="0" FontSize="11"/>
                        </Border>
                    </Button>
                </StackPanel>
                <Rectangle Height="1" Width="Auto" Fill="Orange" Margin="0,10,0,10" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"/>
            </Grid>
            <Grid Visibility="{Binding Loading, Converter={StaticResource BooleanToVisibilityConverter}}" Background="White" Opacity="0.9">
                <ProgressRing IsActive="True"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="OrtTemplate" x:DataType="contracts:Ort">
        <StackPanel Margin="0,0,0,10">
            <TextBlock Text="{Binding Bezeichnung}" FontWeight="Bold"/>
            <TextBlock Text="{Binding Stadt}" Margin="10,0,0,0" FontSize="12" FontStyle="Italic" TextWrapping="WrapWholeWords"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="SpielTemplate" x:DataType="contracts:Spiel">
        <StackPanel Margin="0,0,0,10">
            <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
            <TextBlock Text="{Binding Beschreibung}" Margin="10,0,0,0" FontSize="12" FontStyle="Italic" TextWrapping="WrapWholeWords"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AuftrittsterminTemplate_Nachbearbeitung" x:DataType="vm:AuftrittsterminViewModel">
        <StackPanel Orientation="Horizontal">
            <SymbolIcon Symbol="Help" Foreground="Red" Visibility="{x:Bind Path=NachbereitungNoetig, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <SymbolIcon Symbol="Accept" Foreground="Green" Visibility="{x:Bind Path=NachbereitungNoetig, Converter={StaticResource BooleanToInvertedVisibilityConverter}}"/>
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="10,10,0,0" Width="200">
                <TextBlock Text="{x:Bind Path=Showtyp, Mode=OneWay}" FontWeight="Bold"/>
                <TextBlock Text="{x:Bind Path=Ort, Mode=OneWay}" Margin="10,0,0,0"/>
                <TextBlock Text="{x:Bind Path=Datum, Mode=OneWay}" Margin="10,0,0,0" TextWrapping="WrapWholeWords"/>
                <TextBlock Text="{x:Bind Path=Auslagen, Mode=OneWay}" Margin="10,0,0,0"/>
                <TextBlock Text="{x:Bind Path=Teilnahmestatus, Mode=OneWay}" FontWeight="Bold" Foreground="{x:Bind Path=TeilnahmestatusFarbe}" Margin="10,0,0,0"/>
            </StackPanel>
            <Button Margin="10" Command="{x:Bind Path=StartNachbereitungCommand}">
                <Button.Content>
                    <SymbolIcon Symbol="Edit"/>
                </Button.Content>
            </Button>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>
